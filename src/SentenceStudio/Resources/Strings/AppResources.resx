<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TitleDashboard" xml:space="preserve">
    <value>Dashboard</value>
    <comment>the title of the main page</comment>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
    <comment>button title</comment>
  </data>
  <data name="VocabularyList" xml:space="preserve">
    <value>Vocabulary List</value>
    <comment>label</comment>
  </data>
  <data name="AddVocabularyList" xml:space="preserve">
    <value>Add a Vocabulary List</value>
    <comment>label</comment>
  </data>
  <data name="Activities" xml:space="preserve">
    <value>Activities</value>
    <comment>label</comment>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>Sentence Studio</value>
    <comment/>
  </data>
  <data name="StartLesson" xml:space="preserve">
    <value>Start a Lesson</value>
    <comment/>
  </data>
  <data name="PracticeWriting" xml:space="preserve">
    <value>Writing Practice</value>
    <comment/>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Toggle Language</value>
    <comment/>
  </data>
  <data name="Warmup" xml:space="preserve">
    <value>Warmup</value>
    <comment/>
  </data>
  <data name="Translate" xml:space="preserve">
    <value>Translation</value>
    <comment/>
  </data>
  <data name="Write" xml:space="preserve">
    <value>Write</value>
    <comment/>
  </data>
  <data name="WhatDoYouWantToSay" xml:space="preserve">
    <value>What do you want to say?</value>
    <comment/>
  </data>
  <data name="UserInputPlaceholder" xml:space="preserve">
    <value>How do you say that in Korean?</value>
    <comment/>
  </data>
  <data name="DescribeAScene" xml:space="preserve">
    <value>Describe a Scene</value>
    <comment/>
  </data>
  <data name="WhatDoYouSee" xml:space="preserve">
    <value>What do you see?</value>
    <comment/>
  </data>
  <data name="ISee" xml:space="preserve">
    <value>I see...</value>
    <comment/>
  </data>
  <data name="Sentence" xml:space="preserve">
    <value>I wrote</value>
    <comment/>
  </data>
  <data name="Accuracy" xml:space="preserve">
    <value>Accuracy</value>
    <comment/>
  </data>
  <data name="Fluency" xml:space="preserve">
    <value>Fluency</value>
    <comment/>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
    <comment/>
  </data>
  <data name="ChooseAVocabularyWord" xml:space="preserve">
    <value>Choose a vocabulary word</value>
    <comment/>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My Profile</value>
    <comment/>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
    <comment/>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
    <comment/>
  </data>
  <data name="NativeLanguage" xml:space="preserve">
    <value>Native Language</value>
    <comment/>
  </data>
  <data name="TargetLanguage" xml:space="preserve">
    <value>Target Language</value>
    <comment/>
  </data>
  <data name="DisplayLanguage" xml:space="preserve">
    <value>DisplayLanguage</value>
    <comment/>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment/>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Saved</value>
    <comment/>
  </data>
  <data name="CreateStarterVocabPrompt" xml:space="preserve">
    <value>Would you like me to create a starter vocabulary list for you?</value>
    <comment/>
  </data>
  <data name="ParseASentence" xml:space="preserve">
    <value>Parse a Sentence</value>
    <comment/>
  </data>
  <data name="NoVocabPromptResponse" xml:space="preserve">
    <value>No, I'll do it myself</value>
    <comment/>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment/>
  </data>
  <data name="SkillProfiles" xml:space="preserve">
    <value>Skill Profiles</value>
    <comment/>
  </data>
  <data name="Storyteller" xml:space="preserve">
    <value>Story Teller</value>
    <comment/>
  </data>
  <data name="ListName" xml:space="preserve">
    <value>List Name</value>
    <comment/>
  </data>
  <data name="FileType" xml:space="preserve">
    <value>File Type</value>
    <comment/>
  </data>
  <data name="Vocabulary" xml:space="preserve">
    <value>Vocabulary</value>
    <comment/>
  </data>
  <data name="DefaultVocabulary" xml:space="preserve">
    <value>Default Vocabulary</value>
    <comment/>
  </data>
  <data name="DefaultSkill" xml:space="preserve">
    <value>Default Skill Profile</value>
    <comment/>
  </data>
  <data name="Clozures" xml:space="preserve">
    <value>Clozures</value>
    <comment/>
  </data>
  <data name="HowDoYouSay" xml:space="preserve">
    <value>How Do You Say</value>
    <comment/>
  </data>
</root>