<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:c="clr-namespace:SentenceStudio.Pages.Controls"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:lesson="clr-namespace:SentenceStudio.Pages.Lesson"
             xmlns:l="clr-namespace:CustomLayouts"
             xmlns:s="clr-namespace:SentenceStudio.Services"
             xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
             x:Class="SentenceStudio.Pages.Lesson.LessonPage"
             Title="LessonPage"
             x:DataType="lesson:LessonPageModel"
             HideSoftInputOnTapped="True"
             Shell.NavBarIsVisible="True">
    <ContentPage.Resources>
        <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
    </ContentPage.Resources>
    <Grid RowDefinitions="*,80">
        <ScrollView>
            <Grid RowDefinitions="30,*,Auto">
                <!-- Lesson Content -->
                <Grid Grid.Row="1"
                      ColumnDefinitions="{OnIdiom Phone='*', Default='6*,3*'}"
                      Margin="30">
                    <l:HorizontalWrapLayout x:Name="SentenceStack"
                                            BindableLayout.ItemsSource="{Binding Vocabulary}"
                                            Spacing="8"
                                            IsVisible="{Binding HasFeedback, Converter={StaticResource InvertedBoolConverter}}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate x:DataType="s:VocabWord">
                                <Grid IsClippedToBounds="False">
                                    <Grid.GestureRecognizers>
                                        <PointerGestureRecognizer PointerEntered="PointerGestureRecognizer_PointerEntered"
                                                                  PointerExited="PointerGestureRecognizer_PointerExited"
                                                                  PointerMoved="PointerGestureRecognizer_PointerMoved" />
                                    </Grid.GestureRecognizers>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <VisualState.Setters>
                                                    <Setter Property="Background"
                                                            Value="Transparent" />
                                                    <Setter TargetName="TermLabel"
                                                            Property="Label.TextColor"
                                                            Value="{StaticResource DarkOnLightBackground}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter TargetName="TermLabel"
                                                            Property="Label.TextDecorations"
                                                            Value="Underline" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Selected">
                                                <VisualState.Setters>
                                                    <Setter TargetName="TermLabel"
                                                            Property="Label.TextDecorations"
                                                            Value="Underline" />
                                                    <Setter TargetName="TranslationLabel"
                                                            Property="Label.IsVisible"
                                                            Value="True" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Label Text="{Binding NativeLanguageTerm}"
                                           x:Name="TermLabel"
                                           HorizontalOptions="Start"
                                           TextColor="{AppThemeBinding Dark={StaticResource LightOnDarkBackground}, Light={StaticResource DarkOnLightBackground}}"
                                           FontSize="64" />
                                </Grid>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </l:HorizontalWrapLayout>
                    <!-- Feedback -->
                    <c:FeedbackPanel Grid.Column="{OnIdiom Phone=0, Default=1}"
                                     IsVisible="{Binding HasFeedback}"
                                     Feedback="{Binding Feedback}" />
                </Grid>
                <!-- Input -->
                <Grid ColumnDefinitions="*, Auto, Auto, Auto"
                      RowDefinitions="{OnIdiom *, Phone='*,*'}"
                      x:Name="InputUI"
                      Grid.Row="2"
                      RowSpacing="{OnIdiom 0, Phone=5}"
                      Padding="{OnIdiom 30, Phone='15, 0'}"
                      ColumnSpacing="{OnIdiom 15, Phone=5}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Blocks">
                                <VisualState.Setters>
                                    <Setter TargetName="UserInputField"
                                            Property="Border.IsVisible"
                                            Value="False" />
                                    <Setter TargetName="VocabBlocks"
                                            Property="l:HorizontalWrapLayout.IsVisible"
                                            Value="True" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Keyboard">
                                <VisualState.Setters>
                                    <Setter TargetName="UserInputField"
                                            Property="Border.IsVisible"
                                            Value="True" />
                                    <Setter TargetName="VocabBlocks"
                                            Property="l:HorizontalWrapLayout.IsVisible"
                                            Value="False" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Mic">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="Pink" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <c:FormField ControlTemplate="{StaticResource FormFieldTemplate}"
                                 FieldLabel="Translation"
                                 x:Name="UserInputField"
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="{OnIdiom 1, Phone=4}">
                        <Entry Placeholder="그건 한국어로 어떻게 말해요?"
                               Text="{Binding UserInput}"
                               FontSize="32"
                               ReturnType="Go"
                               ReturnCommand="{Binding GradeMeCommand}" />
                    </c:FormField>
                    <!-- Blocks -->
                    <l:HorizontalWrapLayout x:Name="VocabBlocks"
                                            Spacing="4"
                                            BindableLayout.ItemsSource="{Binding VocabBlocks}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <Label Text="{Binding .}"
                                       Background="{StaticResource Gray200}"
                                       TextColor="{StaticResource Gray900}"
                                       FontSize="32"
                                       Padding="4"
                                       LineHeight="1">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding UseVocabCommand, Source={RelativeSource AncestorType={x:Type lesson:LessonPageModel}}}"
                                                              CommandParameter="{Binding .}" />
                                    </Label.GestureRecognizers>
                                </Label>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </l:HorizontalWrapLayout>
                </Grid>
                <!-- HUD with progress -->
                <Grid Padding="{OnIdiom Phone='0,6,15,0', Default={StaticResource size240}}">
                    <Label Text="{Binding Progress}"
                           HorizontalOptions="End"
                           VerticalOptions="Start" />
                </Grid>
            </Grid>
        </ScrollView>
        <!-- Navigation -->
        <Grid Grid.Row="1"
              RowDefinitions="1,*"
              ColumnDefinitions="60,1,*,1,60,1,60">
            <Button Grid.Column="0"
                    Grid.Row="1"
                    Text="GO"
                    TextColor="{AppThemeBinding Dark={StaticResource LightOnDarkBackground}, Light={StaticResource DarkOnLightBackground}}"
                    Background="Transparent"
                    Command="{Binding GradeMeCommand}" />
            <c:ModeSelector x:Name="ModeSelector"
                            Grid.Column="2"
                            Grid.Row="1"
                            HorizontalOptions="Center"
                            VerticalOptions="Center" />
            <Button Grid.Column="6"
                    Grid.Row="1"
                    ImageSource="{mi:SegoeFluent Icon=Next, IconSize=24}"
                    Background="Transparent"
                    Command="{Binding NextSentenceCommand}" />
            <!-- Grid Lines -->
            <BoxView Grid.ColumnSpan="7"
                     Color="Black"
                     HeightRequest="1" />
            <BoxView Grid.Column="1"
                     Grid.Row="1"
                     Color="Black"
                     WidthRequest="1" />
            <BoxView Grid.Column="3"
                     Grid.Row="1"
                     Color="Black"
                     WidthRequest="1" />
            <BoxView Grid.Column="5"
                     Grid.Row="1"
                     Color="Black"
                     WidthRequest="1" />
        </Grid>
        <!-- Popover -->
        <Label x:Name="PopOverLabel"
               Padding="8"
               LineHeight="1"
               Background="{AppThemeBinding Dark={StaticResource LightBackground}, Light={StaticResource DarkBackground}}"
               TextColor="{AppThemeBinding Dark={StaticResource DarkOnLightBackground}, Light={StaticResource LightOnDarkBackground}}"
               IsVisible="False"
               ZIndex="10"
               FontSize="64"
               HorizontalOptions="Start"
               VerticalOptions="Start" />
        <!-- Busy Indicator -->
        <AbsoluteLayout x:Name="LoadingOverlay"
                        IsVisible="{Binding IsBusy}"
                        BackgroundColor="#80000000"
                        Grid.RowSpan="2">
            <Label Text="Thinking..."
                   FontSize="64"
                   AbsoluteLayout.LayoutFlags="PositionProportional"
                   AbsoluteLayout.LayoutBounds="0.5,0.5,AutoSize,AutoSize"
                   TextColor="{AppThemeBinding Dark={StaticResource LightOnDarkBackground}, Light={StaticResource DarkOnLightBackground}}" />
        </AbsoluteLayout>
    </Grid>
</ContentPage>